{
  "controller": {
    "scope": "javascript",
    "prefix": "controller",
    "body": [
      "/**",
      " * Initialize the $TM_FILENAME_BASE controller.",
      " * @param {object} options The initialization options.",
      " * @param {string} options.title The title of the view.",
      " * @param {string} options.id The id of the html body tag.",
      " * @returns {object} The initialized $TM_FILENAME_BASE controller.",
      "*/",
      "const intialize = (options = {}) => {",
      "\tconst {",
      "\t\tid = '$UUID',",
      "\t\ttitle = '$TM_FILENAME_BASE',",
      "\t} = options;",
      "",
      "\tconst controller = {",
      "\t\t$TM_FILENAME_BASE: async (req, res) => {",
      "\t\t\tres.render('$TM_FILENAME_BASE/index', { id, title });",
      "\t\t},",
      "\t};",
      "",
      "\treturn controller;",
      "};",
      "",
      "module.exports = intialize;",
      ""
    ]
  },
  "router": {
    "scope": "javascript",
    "prefix": "router",
    "body": [
      "const express = require('express');",
      "",
      "const ${TM_FILENAME_BASE}Controller = require('../controllers/$TM_FILENAME_BASE');",
      "const routeHandler = require('../helper/route-handler');",
      "",
      "/**",
      " * Initialize the $TM_FILENAME_BASE route.",
      " * @param {object} options The options for initializing the route.",
      " * @param {express.Router} options.router The router for handling the route.",
      "*/",
      "const intialize = (options = {}) => {",
      "\tconst {",
      "\t\tcontroller = ${TM_FILENAME_BASE}Controller(),",
      "\t\thandler = routeHandler(),",
      "\t\trouter = express.Router()",
      "\t} = options;",
      "",
      "\trouter.get('/', async (req, res) => handler(req, res, controller.$TM_FILENAME_BASE));",
      "",
      "\treturn router;",
      "};",
      "",
      "module.exports = intialize;",
      ""
    ]
  },
  "guid": {
    "scope": "javascript",
    "prefix": "guid",
    "body": "$UUID"
  }
}