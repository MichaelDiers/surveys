name: BE/SaveSurveysService.yaml
on:
  push:
    branches:
      - main
    paths:
      - 'backend/SaveSurveyService/**'
  workflow_dispatch:
env:
  FUNCTION_NAME: SaveSurveyService
  SOURCE_DIR: 'backend/SaveSurveyService/functions'
  COLLECTION_NAME: ${{ secrets.GLOBAL_SURVEYS_COLLECTION_NAME }}
  TOPIC_NAME_SUB: ${{ secrets.GLOBAL_SAVE_SURVEY_SERVICE_SUB }}
  SCHEMA_FILE: 'backend/SaveSurveyService/schema/SaveSurveySchema.avro'
  SCHEMA_NAME: ${{ secrets.GLOBAL_SAVE_SURVEY_SERVICE_SUB }}_SCHEMA  
  MESSAGE_ENCODING: json
  STATUS_CREATED: ${{ secrets.GLOBAL_STATUS_CREATED }}
  TOPIC_NAME_STATUS_UPDATE: ${{ secrets.GLOBAL_PUBSUB_TOPIC_SURVEY_STATUS_UPDATE }}
jobs:
  test:
    runs-on: ubuntu-latest
    environment:
      name: SaveSurveyService-Test
    env:
      GCP_CREDENTIALS: ${{ secrets.GLOBAL_GCP_CREDENTIALS_TEST }}
      PROJECT_ID: ${{ secrets.GLOBAL_PROJECT_ID_TEST }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: delete topic
        uses: actions-hub/gcloud@master
        continue-on-error: true
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub topics delete ${{ env.TOPIC_NAME_SUB }} 
      - name: delete schema
        uses: actions-hub/gcloud@master
        continue-on-error: true
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub schemas delete ${{ env.SCHEMA_NAME }} --quiet
      - name: deploy schema
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub schemas create ${{ env.SCHEMA_NAME }} --type=AVRO --definition-file=${{ env.SCHEMA_FILE }}
      - name: deploy topic
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub topics create ${{ env.TOPIC_NAME_SUB }} --message-encoding=${{ env.MESSAGE_ENCODING }} --schema=${{ env.SCHEMA_NAME }}      
      - name: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ env.GCP_CREDENTIALS }}'
      - name: deploy
        uses: google-github-actions/deploy-cloud-functions@v0
        with:
          name: ${{ env.FUNCTION_NAME }}
          runtime: nodejs14
          project_id: ${{ env.PROJECT_ID }}
          source_dir: ${{ env.SOURCE_DIR }}
          env_vars: ENV_COLLECTION_NAME=${{ env.COLLECTION_NAME }},GCLOUD_PROJECT=${{ env.PROJECT_ID }},ENV_STATUS_CREATED=${{ env.STATUS_CREATED }},ENV_TOPIC_NAME=${{ env.TOPIC_NAME_STATUS_UPDATE }}
          event_trigger_type: google.pubsub.topic.publish
          event_trigger_resource: projects/${{ env.PROJECT_ID }}/topics/${{ env.TOPIC_NAME_SUB }}
  stage:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: SaveSurveyService-Stage
    env:
      GCP_CREDENTIALS: ${{ secrets.GLOBAL_GCP_CREDENTIALS_STAGE }}
      PROJECT_ID: ${{ secrets.GLOBAL_PROJECT_ID_STAGE }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: delete topic
        uses: actions-hub/gcloud@master
        continue-on-error: true
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub topics delete ${{ env.TOPIC_NAME_SUB }} 
      - name: delete schema
        uses: actions-hub/gcloud@master
        continue-on-error: true
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub schemas delete ${{ env.SCHEMA_NAME }} --quiet
      - name: deploy schema
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub schemas create ${{ env.SCHEMA_NAME }} --type=AVRO --definition-file=${{ env.SCHEMA_FILE }}
      - name: deploy topic
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub topics create ${{ env.TOPIC_NAME_SUB }} --message-encoding=${{ env.MESSAGE_ENCODING }} --schema=${{ env.SCHEMA_NAME }}
      - name: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ env.GCP_CREDENTIALS }}'
      - name: deploy
        uses: google-github-actions/deploy-cloud-functions@v0
        with:
          name: ${{ env.FUNCTION_NAME }}
          runtime: nodejs14
          project_id: ${{ env.PROJECT_ID }}
          source_dir: ${{ env.SOURCE_DIR }}
          env_vars: ENV_COLLECTION_NAME=${{ env.COLLECTION_NAME }},GCLOUD_PROJECT=${{ env.PROJECT_ID }},ENV_STATUS_CREATED=${{ env.STATUS_CREATED }},ENV_TOPIC_NAME=${{ env.TOPIC_NAME_STATUS_UPDATE }}
          event_trigger_type: google.pubsub.topic.publish
          event_trigger_resource: projects/${{ env.PROJECT_ID }}/topics/${{ env.TOPIC_NAME_SUB }}
  prod:
    needs: stage
    runs-on: ubuntu-latest
    environment:
      name: SaveSurveyService-Prod
    env:
      GCP_CREDENTIALS: ${{ secrets.GLOBAL_GCP_CREDENTIALS_PROD}}
      PROJECT_ID: ${{ secrets.GLOBAL_PROJECT_ID_PROD }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: delete topic
        uses: actions-hub/gcloud@master
        continue-on-error: true
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub topics delete ${{ env.TOPIC_NAME_SUB }} 
      - name: delete schema
        uses: actions-hub/gcloud@master
        continue-on-error: true
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub schemas delete ${{ env.SCHEMA_NAME }} --quiet
      - name: deploy schema
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub schemas create ${{ env.SCHEMA_NAME }} --type=AVRO --definition-file=${{ env.SCHEMA_FILE }}
      - name: deploy topic
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{ env.PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{ env.GCP_CREDENTIALS }}
        with:
          args: pubsub topics create ${{ env.TOPIC_NAME_SUB }} --message-encoding=${{ env.MESSAGE_ENCODING }} --schema=${{ env.SCHEMA_NAME }}
      - name: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ env.GCP_CREDENTIALS }}'
      - name: deploy
        uses: google-github-actions/deploy-cloud-functions@v0
        with:
          name: ${{ env.FUNCTION_NAME }}
          runtime: nodejs14
          project_id: ${{ env.PROJECT_ID }}
          source_dir: ${{ env.SOURCE_DIR }}
          env_vars: ENV_COLLECTION_NAME=${{ env.COLLECTION_NAME }},GCLOUD_PROJECT=${{ env.PROJECT_ID }},ENV_STATUS_CREATED=${{ env.STATUS_CREATED }},ENV_TOPIC_NAME=${{ env.TOPIC_NAME_STATUS_UPDATE }}
          event_trigger_type: google.pubsub.topic.publish
          event_trigger_resource: projects/${{ env.PROJECT_ID }}/topics/${{ env.TOPIC_NAME_SUB }}